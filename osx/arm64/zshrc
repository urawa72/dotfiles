##### Environments #####
# MacPorts and homebrew
export PATH="$PATH:/opt/local/bin"
export PATH="$PATH:/opt/homebrew/bin"

# python
export PATH="$PATH:$HOME/Library/Python/3.8/bin" # NOTE: install by MacPorts

# go
export GO111MODULE=on
export GOPATH=$HOME/go
export PATH=$PATH:$GOPATH/bin
export PATH=$PATH:/opt/local/bin/go

# rust
export PATH=$PATH:$HOME/.cargo/bin

# node.js
export NODE_OPTIONS="--max_old_space_size=4000"

# zplug
# export ZDOTDIR=$HOME/.zsh # TODO make separate zsh files
export ZDOTDIR=$HOME
export ZPLUG_HOME=$ZDOTDIR/.zplug
export ZPLUG_BIN=$ZPLUG_HOME/bin
export ZPLUG_LOADFILE=$ZPLUG_HOME/packages.zsh
export ZPLUG_CACHE_DIR=$ZPLUG_HOME/.cache

# others
export LC_CTYPE=en_US.UTF-8
# export TERM=xterm-256color
export PATH="/opt/homebrew/Cellar/llvm/11.0.0/bin:$PATH"

if [[ $(command -v anyenv) ]]; then
  eval "$(anyenv init -)"
fi


##### Settings #####
# basic
autoload -U compinit
compinit
setopt auto_cd
setopt correct
setopt share_history

# prompt
fpath+=$HOME/.zsh/pure
autoload -U promptinit; promptinit

# dir color
export LSCOLORS=gxfxxxxxcxxxxxxxxxgxgx
export LS_COLORS='di=01;36:ln=01;35:ex=01;32'
zstyle ':completion:*' list-colors 'di=36' 'ln=35' 'ex=32'

# zplug initialize
if [[ -f $ZPLUG_HOME/init.zsh ]]; then
  source ~/.zplug/init.zsh
fi

# zplug load plugins
if type "zplug" > /dev/null 2>&1; then
  zplug "zsh-users/zsh-syntax-highlighting"
  zplug "zsh-users/zsh-autosuggestions"
  zplug "zsh-users/zsh-completions"
  bindkey '^j' autosuggest-accept
  zplug load
fi



##### Aliases #####
case "${OSTYPE}" in
darwin*)
   alias ls="ls -GF"
   ;;
linux*)
  alias ls='ls -F --color'
    ;;
esac
alias ll="ls -lAFG"
# git
alias g="git"
alias ga="git add ."
alias gd="git diff"
alias gb="git branch"
alias gbd="git branch --merged master | grep -vE '^\*|master$|main$' | xargs -I % git branch -d %"
alias gs="git status"
alias gl="git log"
alias glg="git log --oneline --graph --decorate"
alias gps="git push"
alias gpl="git pull"
alias gcm="git commit -m"
alias gco="git checkout"
# other
alias v="nvim"
alias vim="nvim"
alias tt="tmux"
alias ca="cargo"
if [[ $(command -v colordiff) ]]; then
  alias diff='colordiff'
fi
# python
alias pip="/opt/local/bin/pip"
alias pip3="/opt/local/bin/pip3"
# npm
alias infoenv='npx envinfo'
alias jwt='npx jwt'
alias uuid='npx uuid'
# exa
if [[ $(command -v exa) ]]; then
  alias e='exa --icons'
  alias l=e
  alias ls=e
  alias ea='exa -a --icons'
  alias la=ea
  alias ee='exa -aal --icons'
  alias ll=ee
  alias et='exa -T -L 3 -a -I "node_modules|.git|.cache" --icons'
  alias lt=et
  alias eta='exa -T -a -I "node_modules|.git|.cache" --color=always --icons | less -r'
  alias lta=eta
fi
# docker
alias d="docker"
alias dc="docker-compose"



##### Functions #####
# for compro
function compile_test() {
  g++ -std=c++14 main.cpp
  oj t
}
alias ojt=compile_test
alias ojs="oj s main.cpp -l 4004" # submit with clang
alias ojtr="cargo atcoder test"
alias ojsr="cargo atcoder submit"
function run_cpp() {
  clang++ main.cpp
  ./a.out
}
alias runcpp=run_cpp

# for aws
function change_role() {
  if [ $# -eq 0 ]; then
    echo 引数を設定してください
    return
  fi
  echo Change Role
  export AWS_PROFILE=$1
  eval $(command assume-role $1)
}

# ghq
function ghq_fzf() {
  local target_dir=$(ghq list | fzf-tmux --reverse --query="$LBUFFER")
  local ghq_root=$(ghq root)
  if [ -n "$target_dir" ]; then
    BUFFER="cd ${ghq_root}/${target_dir}"
    zle accept-line
  fi
  zle reset-prompt
}
zle -N ghq_fzf
bindkey "^g" ghq_fzf

# select history
function select_history() {
  BUFFER=$(history -n -r 1 | fzf-tmux --reverse --no-sort +m --query "$LBUFFER" --prompt="History > ")
  CURSOR=$#BUFFER
}
zle -N select_history
bindkey '^r' select_history

function select_github_star() {
  if [ -n "$(git config --get user.name)" ]; then
    user_id=$(git config --get user.name)
  else
    echo "Set git config user.name"
    exit 1
  fi
  local chrome="/Applications/Google Chrome.app"
  target=$(curl -s https://api.github.com/users/$user_id/starred\?per_page\=1000 | jq '.[] | .html_url' | awk '{gsub("\"", "");print $0;}' | fzf-tmux --reverse --no-sort +m --query "$LBUFFER" --prompt="Stars >")
  open "$target" -a "$chrome"
}
alias stars="select_github_star"
# zle -N select_github_star
# bindkey '^s' select_github_star

# git add fzf
function gadd() {
    local selected
    selected=$(unbuffer git status -s | fzf -m --ansi --preview="echo {} | awk '{print \$2}' | xargs git diff --color" | awk '{print $2}')
    if [[ -n "$selected" ]]; then
        selected=$(tr '\n' ' ' <<< "$selected")
        git add $selected
    fi
}


prompt pure

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
